geo $old_sign_key {
 default 0;

 2001:608:a01:2::/64 1;
 2001:608:a01:3::/64 1;
 2001:608:a01:4::/64 1;
}

server {
    listen 80;
    listen [::]:80;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _ firmware.ffmuc.net firmware.in.ffmuc.net;

    client_max_body_size 2048M;

    root /srv/www/firmware.ffmuc.net;

    fancyindex on;
    fancyindex_exact_size off;
    fancyindex_name_length 70;
    fancyindex_localtime on;
    fancyindex_default_sort name;

    location = / {
        if ($scheme = http) {
            return 301 https://firmware.ffmuc.net;
        }
    }

    location ~ ^/(stable|testing|experimental)/ {
        # for accessing it e.g. via ffmuc.net/firmware
        add_header Access-Control-Allow-Origin "*";

        # to let nodes upgrade to a signable release
        if ($old_sign_key = 1) {
            rewrite /stable/([a-z0-9\/.-]+) /v2018.1/$1 last;
            rewrite /experimental/([a-z0-9\/.-]+) /v2018.1/$1 last;
        }
        if ($old_sign_key = 2) {
            rewrite /stable/([a-z0-9\/.-]+) /v2019.0.8/$1 last;
            rewrite /testing/([a-z0-9\/.-]+) /v2019.0.8/$1 last;
            rewrite /experimental/([a-z0-9\/.-]+) /v2019.0.8/$1 last;
        }
    }

    location ^~ /.well-known/acme-challenge/ {
    }

    location ^~  /.gluon-firmware-selector {
    }

    location /raw {
        index none;
        alias /srv/www/firmware.ffmuc.net;
    }
    # opkg mirror
    location ~^/openwrt/(?<file>.+)$ {
        return 302 http://ftp.stw-bonn.de/pub/openwrt/$file;
    }

    location ~ /\. {
        deny all;
    }

    # opkg mirror
    location ~^/openwrt/(?<file>.+)$ {
        return 302 http://ftp.stw-bonn.de/pub/openwrt/$file;
    }

    # lede mirror
    location ~^/lede/(?<file>.+)$ {
        return 302 http://downloads.lede-project.org/releases/$file;
    }

    location /wpad.dat {
        access_log  off;
        error_log  off;
        default_type text/plain;
        return 200 'OK';
    }

{%- if 'VIE01' in salt['pillar.get']('netbox:site:name') %}
    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;
{%- else %}
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem; # managed by Certbot
{%- endif %}

    access_log /var/log/nginx/{{ domain }}_access.log json_normal;
    error_log  /var/log/nginx/{{ domain }}_error.log;
}