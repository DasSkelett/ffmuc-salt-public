upstream map_upstream {
   server map.ov.ffmuc.net:80;
}
upstream map_data_upstream {
   server gw02.ext.ffmuc.net:443;
}

server {
   listen 80;
	listen [::]:80;
	listen 443 ssl http2;
   listen [::]:443 ssl http2;
   server_name map.ext.ffmuc.net map.ffmuc.net map.freifunk-muenchen.de;
   
   # Force HTTPS connection. This rules is domain agnostic
   if ($scheme != "https") {
      rewrite ^ https://$host$uri permanent;
   }

   location / {
      proxy_pass         http://map_upstream;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
   }

   location /geomap.html {
      rewrite ^ https://map.ffmuc.net permanent;
   }
   
   location /data/meshviewer.json {
      proxy_pass https://gw02.ext.ffmuc.net/meshviewer.json;
   }

   location /data/ {
      proxy_pass https://gw02.ext.ffmuc.net/;
   }

   location /yanic/meshviewer.json {
      #proxy_pass https://isartor.ffmuc.net/meshviewer.json;
      proxy_pass https://gw02.ext.ffmuc.net/meshviewer.json;
   }
   
{%- if 'VIE01' in salt['pillar.get']('netbox:site:name') %}
    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;
{%- else %}
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem; # managed by Certbot
{%- endif %}
   
   access_log /var/log/nginx/{{ domain }}_access.log json_normal;
   error_log  /var/log/nginx/{{ domain }}_error.log;
}
