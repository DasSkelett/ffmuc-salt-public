upstream map_data_upstream {
   server gw04.ext.ffmuc.net:443;
}

proxy_cache_path /var/cache/nginx-map levels=1:2 keys_zone=map_cache:10m inactive=120m use_temp_path=off;

server {
   listen 80;
	listen [::]:80;
	listen 443 ssl http2;
   listen [::]:443 ssl http2;
   server_name map.ext.ffmuc.net map.ffmuc.net map.freifunk-muenchen.de;
   
   # Force HTTPS connection. This rules is domain agnostic
   if ($scheme != "https") {
      rewrite ^ https://$host$uri permanent;
   }

   root /srv/www/map.ffmuc.net;

   location /geomap.html {
      rewrite ^ https://map.ffmuc.net permanent;
   }
   
   location /data/meshviewer.json {
      proxy_pass https://map_data_upstream/meshviewer.json;
      proxy_cache map_cache;
      proxy_cache_valid 200 302 1m;
      proxy_cache_revalidate  on;
   }

   location /data/ {
      proxy_pass https://map_data_upstream/;
      proxy_cache map_cache;
      proxy_cache_valid 200 302 1m;
      proxy_cache_revalidate  on;
   }

   location /yanic/meshviewer.json {
      #proxy_pass https://isartor.ffmuc.net/meshviewer.json;
      proxy_pass https://map_data_upstream/meshviewer.json;
      proxy_cache map_cache;
      proxy_cache_valid 200 302 1m;
      proxy_cache_revalidate  on;
   }
   
{%- if 'VIE01' in salt['pillar.get']('netbox:site:name') %}
    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;
{%- else %}
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem; # managed by Certbot
{%- endif %}
   
   access_log /var/log/nginx/{{ domain }}_access.log json_normal;
   error_log  /var/log/nginx/{{ domain }}_error.log;
}
