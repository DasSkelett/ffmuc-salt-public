#
# {{ site }} FASTd configuration (Salt managed)
#

log to syslog level info;

interface "fastd-{{ site }}";

bind {{ salt['grains.get']('ip4_interfaces:vlan3')[0] }}:{{ fastd_port }} interface "vrf_external";
bind [{{ salt['grains.get']('ip6_interfaces:vlan3')[0] }}]:{{ fastd_port }} interface "vrf_external";

#method "aes128-ctr+umac";	# Not supported by CPU on this machine
method "salsa2012+umac";
method "null";

# Mark packets to make sure they are associated to VRF vrf_external.
# Specifying the interface and setsockopt() isn't enough for fastd.
packet mark 0x1023;

secret "{{ secret }}";
mtu 1406;

status socket "/var/run/fastd.{{ site }}.sock";

on up "
	ip link set $INTERFACE down
	ip link set address {{ mac_address }} dev $INTERFACE
	ip link set $INTERFACE up

	batctl meshif {{ bat_iface }} if add $INTERFACE
	batctl meshif {{ bat_iface }} gw server 1024Mbit/1024Mbit
	batctl meshif {{ bat_iface }} bridge_loop_avoidance 1
	batctl meshif {{ bat_iface }} aggregation 0

	echo 2 > /sys/class/net/{{ bat_iface }}/brport/multicast_router
";

on down "
	batctl -m {{ bat_iface }} if del $INTERFACE
";

{%- for node,bla in salt['mine.get']('netbox:role:name:gateway', 'minion_id', tgt_type='pillar').items() | sort %}
{%- if grains['id'] not in node %}

{%- set fastd_public_key = salt['mine.get'](node,'minion_fastd_public', tgt_type='glob')  %}

{%- if 'mine_interval' not in fastd_public_key  and node in fastd_public_key %}

peer "{{ node }}" {
	key "{{ fastd_public_key[node]  }}";
	remote ipv6 "{{ node | regex_replace('in\.ffmuc\.net','ext.ffmuc.net') }}" port {{ fastd_port }};
}

{%- endif %}
{%- endif %}
{%- endfor %}

on verify "true";
