-- Default empty Knot DNS Resolver configuration in -*- lua -*-
-- Bind ports as privileged user (root) --
-- net = { '0.0.0.0', '::' }

-- This might not be needed anymore a binding to vrf via systemd
{%- for ipaddress in salt["pillar.get"]("netbox:interfaces:vlan3:ipaddresses", []) %}
{%- if ipaddress.family.value == 6 %}
-- net.outgoing_v6('{{ ipaddress["address"].split('/')[0] }}')
{%- else %}
-- net.outgoing_v4('{{ ipaddress["address"].split('/')[0] }}')
{%- endif %}
{% endfor %}

-- Switch to unprivileged user --
user('knot-resolver','knot-resolver')
-- Unprivileged

modules.load("edns_keepalive")
modules.load("workarounds < iterate")
modules.load("serve_stale < cache")

modules.load("predict")
predict.config({
    window = 15,
    period = 6*(60/15) -- track last 6 hours
})

--modules.load("http")
--http.config({
--    host = 'localhost',
--    port = 8053,
--})

cache.size = 200*MB

modules.load("view")
view:addr('127.0.0.1/32', policy.all(policy.PASS))
view:addr('[::1]/128', policy.all(policy.PASS))
view:addr('10.80.0.0/16', policy.all(policy.PASS))
view:addr('2001:608:a01::/48', policy.all(policy.PASS))

-- drop everything that has not matched
view:addr('0.0.0.0/0', policy.all(policy.DROP))
view:addr('::/0', policy.all(policy.DROP))

modules.load('prefill')
prefill.config({
    ['.'] = {
        url = 'https://www.internic.net/domain/root.zone',
        ca_file = '/etc/ssl/certs/ca-certificates.crt',
        interval = 86400  -- seconds
    }
})

modules.unload("refuse_nord")
