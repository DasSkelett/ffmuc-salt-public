{%- from "nebula/map.jinja" import nebula with context %}
{%- set role = salt['pillar.get']('netbox:role:name', salt['pillar.get']('netbox:device_role:name')) %}
{%- set roles = salt['pillar.get']('netbox:config_context:roles', []) %}

pki:
  ca: /etc/nebula/ca.crt
  cert: /etc/nebula/{{ grains.id }}.crt
  key: /etc/nebula/{{ grains.id }}.key

static_host_map:
{%- for lighthouse, public_addrs in nebula.lighthouses.items() %}
  "{{ lighthouse }}": {{ public_addrs }}
{%- endfor %}
lighthouse:
  am_lighthouse: {{ nebula.am_lighthouse }}
  interval: 60
  hosts:
{%- for lighthouse in nebula.lighthouses %}
    - {{ lighthouse }}
{%- endfor %}

listen:
  host: {{ nebula.listen.host }}
  port: {{ nebula.listen.port }}

punchy:
  punch: true
  respond: true
  delay: 1s

local_range: "{{ nebula.local_range }}"

tun:
  dev: {{ nebula.interface }}
  # Toggles forwarding of local broadcast packets, the address of which depends on the ip/mask encoded in pki.cert
  drop_local_broadcast: true
  # Toggles forwarding of multicast packets
  drop_multicast: true
  tx_queue: 500
  mtu: 1300

handshakes:
  try_interval: 100ms
  retries: 20
  wait_rotation: 5
  trigger_buffer: 64

logging:
  level: info
  format: text

firewall:
  conntrack:
    tcp_timeout: 120h
    udp_timeout: 3m
    default_timeout: 10m
    max_connections: 100000

  outbound:
  - port: any
    proto: any
    host: any

  inbound:
  - port: any
    proto: icmp
    host: any
    # SSH
  - port: 22
    proto: tcp
    host: any
    # HTTPS
  - port: 443
    proto: tcp
    host: any
    # SNMP
  - port: 161
    proto: udp
    host: librenms.in.ffmuc.net
    # mosh
  - port: 60001-60010
    proto: udp
    host: any
{%- if "graylog" in salt["pillar.get"]("netbox:config_context:docker") %}
    # Allow pushing to graylog via filebeat
  - port: 5044
    proto: tcp
    host: any
{%- endif %}
{%- if "salt_master" in roles %}
    # Allow salt access for any host in the network
  - port: 4505-4506
    proto: tcp
    host: any
{%- endif %}
{%- if "docker01.in.ffmuc.net" == grains["id"] %}
  # Allow connections for draw
  - port: 5001
    proto: tcp
    group: webfrontend
  # Allow connections for chat.ffmuc.net
  - port: 8000
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "docker02.in.ffmuc.net" == grains["id"] %}
  # Allow connections for tickets.ffmuc.net
  - port: 8000
    proto: tcp
    group: webfrontend
  # Allow connections for etherpad
  - port: 8081
    proto: tcp
    group: webfrontend
  # Allow connections for ffmuc.net/wiki
  - port: 8083
    proto: tcp
    group: webfrontend
  # Allow connections for ffmuc.net/speed
  - port: 8888
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "docker03.in.ffmuc.net" == grains["id"] %}
  # Allow connections for unifi (stun)
  - port: 3478
    proto: udp
    group: webfrontend
  # Allow connections for unifi (inform)
  - port: 8082
    proto: tcp
    group: webfrontend
  # Allow connections for cloud.ffmuc.net
  - port: 8089
    proto: tcp
    group: webfrontend
  # Allow connections for byro
  - port: 8345
    proto: tcp
    group: webfrontend
  # Allow connections for byro (static)
  - port: 8346
    proto: tcp
    group: webfrontend
  # Allow connections for unifi (web)
  - port: 8443
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "map.in.ffmuc.net" == grains["id"] %}
  # Allow stats access
  - port: 80
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "docker02.in.ffmuc.net" == grains["id"] %}
  # Allow connections for etherpad
  - port: 8081
    proto: tcp
    group: webfrontend
  # Allow connections for ffmuc.net/wiki
  - port: 8083
    proto: tcp
    group: webfrontend
  # Allow connections for ffmuc.net/speed
  - port: 8888
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "docker03.in.ffmuc.net" == grains["id"] %}
  # Allow connections for unifi (stun)
  - port: 3478
    proto: udp
    group: webfrontend
  # Allow connections for unifi (inform)
  - port: 8082
    proto: tcp
    group: webfrontend
  # Allow connections for cloud.ffmuc.net
  - port: 8089
    proto: tcp
    group: webfrontend
  # Allow connections for byro
  - port: 8345
    proto: tcp
    group: webfrontend
  # Allow connections for byro (static)
  - port: 8346
    proto: tcp
    group: webfrontend
  # Allow connections for unifi (web)
  - port: 8443
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "map.in.ffmuc.net" == grains["id"] %}
  # Allow stats access
  - port: 80
    proto: tcp
    group: webfrontend
{%- endif %}
{%- if "stats.in.ffmuc.net" == grains["id"] %}
  # Allow stats access
  - port: 3000
    proto: tcp
    group: webfrontend
  # Allow stats incoming
  - port: 8086
    proto: tcp
    host: any
{%- endif %}
{%- if "icinga2.in.ffmuc.net" == grains["id"] %}
  # Allow icinga2
  - port: 5665
    proto: tcp
    host: any
{%- endif %}
  - port: 5665
    proto: tcp
    host: icinga2.in.ffmuc.net
{%- if "dnsserver" == role or "dnsdist" in roles %}
  - port: 53
    proto: udp
    host: any
  - port: 53
    proto: tcp
    host: any
{%- endif %}
{%- if "dnsdist" in roles %}
  - port: 8083
    proto: tcp
    host: any
{%- endif %}
