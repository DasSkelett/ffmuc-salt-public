#
# {{ node_id }}
#
{%- set roles = salt['mine.get'](node_id,'minion_roles')[node_id] %}
{%- set role = salt['mine.get'](node_id,'minion_role')[node_id] %}
{%- set device_role = salt['mine.get'](node_id,'minion_device_role')[node_id] %}
{%- set sites = salt['pillar.get']('netbox:config_context:sites') %}
{%- set address = salt['mine.get'](node_id,'minion_address', tgt_type='glob')[node_id] %}
{%- set overlay_address = salt['mine.get'](node_id,'minion_overlay_address', tgt_type='glob')[node_id] %}
{%- set address6 = salt['mine.get'](node_id,'minion_address6', tgt_type='glob')[node_id] %}
{%- set icinga_address = salt['mine.get'](grains['id'],'minion_address', tgt_type='glob')[grains['id']] %}
{%- set location = salt['mine.get'](node_id,'minion_location', tgt_type='glob')[node_id] %}

{% if 'mine_interval' not in role %}
{% do roles.append(role) %}
{% elif 'mine_interval' not in device_role %}
{% do roles.append(device_role) %}
{% endif %}

{%- if 'icinga2_server' not in roles %}
object Endpoint "{{ node_id }}" {
        host = "{{ node_id }}"
}

object Zone "{{ node_id }}" {
	endpoints = [ "{{ node_id }}" ]
	parent = "master"
}
{%- endif %}

object Host "{{ node_id }}" {
	import "generic-host"

	display_name = "{{ node_id }}"
	{% if 'mine_interval' not in overlay_address %}
	address = "{{ overlay_address | regex_replace('/\d+$','') }}"
	{% endif %}
    check_command = "hostalive"

	vars.os = "Linux"

	vars.roles = [
	{%- for role in roles|sort %}
		"{{ role }}",
	{%- endfor %}
	]

	vars.sites = [
	{%- for site in sites|sort %}
		"{{ site }}",
	{%- endfor %}
	]

	vars.location = "{{ location }}"

	vars.disk_wfree = "5%"
	vars.disk_cfree = "3%"
	vars.disks["disk /"] = {
	      disk_partitions = "/"
	}
	{% if 'backupserver' in roles %}
	vars.disks["disk /srv"] = {
	      disk_partitions = "/srv"
	}
	{% elif 'buildserver' in roles %}
	vars.disks["disk /build"] = {
	      disk_partitions = "/build"
	}
	{% endif %}
}					

