#
# dns.srv.in.ffho.net
#

# Anycast DNS server

									


# Check DNS servers
apply Service "dns4" {
	import "generic-service"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }
	check_command = "dns"
	vars.dns_lookup = "anycast01.ffmuc.net"
        vars.dns_expected_answer = "5.1.66.255"
	vars.dns_server = "5.1.66.255"

	assign where host.address
        ignore where "VIE01" == host.vars.location
}

apply Service "dns6" {
	import "generic-service"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }
	check_command = "dns"
	vars.dns_lookup = "anycast01.ffmuc.net"
        vars.dns_expected_answer = "5.1.66.255"
	vars.dns_server = "2001:678:e68:f000::"

	assign where host.vars.os == "Linux" && ("webfrontend" in host.vars.roles || "nextgen-gateway" in host.vars.roles)
}


apply Service "named" {
        import "generic-service"

        check_command = "procs"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }

        vars.procs_critical = "1:"
        vars.procs_warning = "1:"
        vars.procs_command = "named"
        check_interval = 2m
        max_check_attempts = 3
        retry_interval = 1m

        assign where "dnsserver" in host.vars.roles
}

apply Service "pdns_recursor" {
        import "generic-service"

        check_command = "procs"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }

        vars.procs_critical = "1:"
        vars.procs_warning = "1:"
        vars.procs_command = "pdns_recursor"
        check_interval = 2m
        max_check_attempts = 3
        retry_interval = 1m

        assign where "master" in host.vars.roles || "nextgen-gateway" in host.vars.roles || "webfrontend" in host.vars.roles
}


apply Service "dnsdist" {
        import "generic-service"

        check_command = "procs"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }

        vars.procs_critical = "1:"
        vars.procs_warning = "1:"
        vars.procs_command = "dnsdist"
        check_interval = 2m
        max_check_attempts = 3
        retry_interval = 1m

        assign where "nextgen-gateway" in host.vars.roles || "webfrontend" in host.vars.roles
}


apply Service "nginx" {
        import "generic-service"

        check_command = "procs"

        if (host.name != NodeName) {
                command_endpoint = host.name
        }

        vars.procs_critical = "1:"
        vars.procs_warning = "1:"
        vars.procs_command = "nginx"
        check_interval = 2m
        max_check_attempts = 3
        retry_interval = 1m

        assign where "webfrontend" in host.vars.roles
}
